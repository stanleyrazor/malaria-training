{"title":"Data visualiaation with {ggplot2}","markdown":{"yaml":{"title":"Data visualiaation with {ggplot2}","author":"Stanley Sayianka<br>-<br>Aug 19, 2025","format":{"revealjs":{"footer":"[Credits: github.com/meghall06/neair](https://github.com/meghall06/neair)&nbsp;&nbsp;&nbsp;","theme":["moon","custom.scss"],"preview-links":"auto","chalkboard":{"boardmarker-width":5}}},"from":"markdown+emoji","execute":{"echo":true}},"headingText":"Data visualization","containsRefs":false,"markdown":"\n\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n1 [2 3 4 5 6]{style=\"opacity:0.25\"}\n:::\n:::\n\n## ggplot2\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n1 [2 3 4 5 6]{style=\"opacity:0.25\"}\n:::\n:::\n\n<br>\n\n`ggplot2` is the data visualization package that is loaded with the `tidyverse` suite and can alternatively be loaded independently.\n\n<br>\n\nthe [g]{style=\"color:#cc0000\"}rammar of [g]{style=\"color:#cc0000\"}raphics maps data to the aesthetic attributes of geometric points\n\n. . .\n\n<br>\n\nencoding data into visual asttributes (e.g., length, color, position, size) is how we signify changes and comparisons\n\n---\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n1 [2 3 4 5 6]{style=\"opacity:0.25\"}\n:::\n:::\n\nThe syntax :\n\n<br>\n\nWe use `+` to join the components of a ggplot object instead of the pipe `|>`\n\n<br>\n\n```{r}\n#| echo: false\nlibrary(tidyverse)\nlibrary(scales)\nlibrary(sf)\n```\n\n```{r}\n#| code-line-numbers: \"1-2|4-6|8-9|11-12\"\n#| eval: false\n\n# we need to pass our data\nggplot(data = your_data) +    \n  \n  # we need to specify the geometry object: line, point, histogram, bar, density, area etc.\n  # we also pass aesthetics including x/y variable, color, fill, size, shape, opacity etc.\n  geom_*.*(mapping = aes()) + \n                \n  # the labels: title, x-label, y-label, subtitles, caption              \n  labs(our_labels) +  \n  \n  # our themes including fonts, and other theming objects\n  theme_*.*()                 \n```\n\n---\n\n## Line chart\n\nFor the data visualization exercise, we will utilize the datasets from the previous sessions.\n\n```{r}\n#| code-line-numbers: \"1|2|3-4\"\n#| eval: false\nmdata <- read.csv('data/interim/pfpr_intvn.csv')\nbusia <- mdata |> filter(county == 'Busia')\nggplot(busia) + \n  geom_line(aes(x = year, y = pfpr, col = residence))\n```\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n[1]{style=\"opacity:0.25\"} 2 [3 4 5 6]{style=\"opacity:0.25\"}\n:::\n:::\n\n. . .\n\n```{r}\n#| echo: false\n#| fig-height: 4\n#| fig-align: \"center\"\nmdata <- read.csv('data/interim/pfpr_intvn.csv')\nbusia <- mdata |> filter(county == 'Busia')\nggplot(busia) + \n  geom_line(aes(x = year, y = pfpr, col = residence))\n```\n\n---\n\n## Adding functional elements (labels)\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n[1]{style=\"opacity:0.25\"} 2 [3 4 5 6]{style=\"opacity:0.25\"}\n:::\n:::\n\n\n```{r}\n#| code-line-numbers: \"1-2|3-5\"\n#| eval: false\nggplot(busia) + \n  geom_line(aes(x = year, y = pfpr, col = residence)) + \n  labs(title = 'Plasmodium Falciparum Prevalence in Busia County',\n       y = 'Year',\n       x = 'PfPr (%)')\n```\n\n. . .\n\n\n```{r}\n#| echo: false\n#| fig-height: 4\n#| fig-align: \"center\"\nggplot(busia) + \n  geom_line(aes(x = year, y = pfpr, col = residence)) + \n  labs(title = 'Plasmodium Falciparum Prevalence in Busia County',\n       x = 'Year',\n       y = 'PfPr (%)')\n```\n\n---\n\n## Adding functional elements (themes)\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n[1]{style=\"opacity:0.25\"} 2 [3 4 5 6]{style=\"opacity:0.25\"}\n:::\n:::\n\n```{r}\n#| code-line-numbers: \"1-2|3-5|6|7\"\n#| eval: false\nggplot(busia) + \n  geom_line(aes(x = year, y = pfpr, col = residence)) + \n  labs(title = 'Plasmodium Falciparum Prevalence in Busia County',\n       y = 'Year',\n       x = 'PfPr (%)') + \n  theme_bw()\n# other themes: theme_bw(), theme_light(), theme_minimal(), theme_gray(), theme_dark(), theme_classic()\n```\n\n. . .\n\n\n```{r}\n#| echo: false\n#| fig-height: 4\n#| fig-align: \"center\"\nggplot(busia) + \n  geom_line(aes(x = year, y = pfpr, col = residence)) + \n  labs(title = 'Plasmodium Falciparum Prevalence in Busia County',\n       y = 'Year',\n       x = 'PfPr (%)') + \n  theme_bw()\n# other themes: theme_bw(), theme_light(), theme_minimal(), theme_gray(), theme_dark(), theme_classic()\n```\n\n---\n\n## Scatter plots\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n[1 2]{style=\"opacity:0.25\"} 3 [4 5 6]{style=\"opacity:0.25\"}\n:::\n:::\n\n\n```{r}\n#| code-line-numbers: \"1-2|3-6\"\n#| eval: false\nggplot(busia) + \n  geom_point(aes(x = itn_coverage, y = pfpr)) + \n  labs(title = 'The relationship between ITN use and PfPr',\n       x = 'ITN Coverage (%)',\n       y = 'PfPr (%)') + \n  theme_bw()\n```\n\n. . .\n\n\n```{r}\n#| echo: false\n#| fig-height: 4\n#| fig-align: \"center\"\nggplot(busia) + \n  geom_point(aes(x = itn_coverage, y = pfpr)) + \n  labs(title = 'The relationship between ITN use and PfPr',\n       x = 'ITN Coverage (%)',\n       y = 'PfPr (%)') + \n  theme_bw()\n```\n\n---\n\n## Adding aesthetic elements (color, shape, size, alpha)\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n[1 2]{style=\"opacity:0.25\"} 3 [4 5 6]{style=\"opacity:0.25\"}\n:::\n:::\n\n```{r}\n#| code-line-numbers: \"1-2|3|4-7|8-9\"\n#| eval: false\nggplot(busia) + \n  geom_point(aes(x = itn_coverage, y = pfpr),\n             color = 'red', size = 2, shape = 15, alpha = 1) + \n  labs(title = 'The relationship between ITN use and PfPr',\n       x = 'ITN Coverage (%)',\n       y = 'PfPr (%)') + \n  theme_bw()\n# try other colors, sizes, and shapes: 15, 16, 17, i.e. 1-20\n# alpha values are for opacity of points: ranging from 0-1\n```\n\n. . .\n\n\n```{r}\n#| echo: false\n#| fig-height: 4\n#| fig-align: \"center\"\nggplot(busia) + \n  geom_point(aes(x = itn_coverage, y = pfpr),\n             color = 'red', size = 2, shape = 15, alpha = 1) + \n  labs(title = 'The relationship between ITN use and PfPr',\n       x = 'ITN Coverage (%)',\n       y = 'PfPr (%)') + \n  theme_bw()\n# try other colors, sizes, and shapes: 15, 16, 17, i.e. 1-20\n# alpha values are for opacity of points: ranging from 0-1\n```\n\n---\n\n## Adding aesthetic elements (color)\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n[1 2]{style=\"opacity:0.25\"} 3 [4 5 6]{style=\"opacity:0.25\"}\n:::\n:::\n\n```{r}\n#| code-line-numbers: \"1-2|3-6\"\n#| eval: false\nggplot(busia) + \n  geom_point(aes(x = itn_coverage, y = pfpr, color = residence)) + \n  labs(title = 'The relationship between ITN use and PfPr',\n       x = 'ITN Coverage (%)',\n       y = 'PfPr (%)') + \n  theme_bw()\n```\n\n. . .\n\n\n```{r}\n#| echo: false\n#| fig-height: 4\n#| fig-align: \"center\"\nggplot(busia) + \n  geom_point(aes(x = itn_coverage, y = pfpr, color = residence)) + \n  labs(title = 'The relationship between ITN use and PfPr',\n       x = 'ITN Coverage (%)',\n       y = 'PfPr (%)') + \n  theme_bw()\n```\n\n---\n\n## Adding functional elements (scale)\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n[1 2]{style=\"opacity:0.25\"} 3 [4 5 6]{style=\"opacity:0.25\"}\n:::\n:::\n\n```{r}\n#| code-line-numbers: \"1-2|3-4|5-8\"\n#| eval: false\nggplot(busia) + \n  geom_point(aes(x = itn_coverage, y = pfpr, color = residence)) + \n  scale_x_continuous(labels = percent_format()) + \n  scale_y_continuous(labels = percent_format()) +\n  labs(title = 'The relationship between ITN use and PfPr',\n       x = 'ITN Coverage (%)',\n       y = 'PfPr (%)') + \n  theme_bw()\n```\n\n. . .\n\n\n```{r}\n#| echo: false\n#| fig-height: 4\n#| fig-align: \"center\"\nggplot(busia) + \n  geom_point(aes(x = itn_coverage, y = pfpr, color = residence)) + \n  scale_x_continuous(labels = percent_format()) + \n  scale_y_continuous(labels = percent_format()) +\n  labs(title = 'The relationship between ITN use and PfPr',\n       x = 'ITN Coverage (%)',\n       y = 'PfPr (%)') + \n  theme_bw()\n```\n\n---\n\n\n## Adding functional elements (trends)\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n[1 2]{style=\"opacity:0.25\"} 3 [4 5 6]{style=\"opacity:0.25\"}\n:::\n:::\n\n```{r}\n#| code-line-numbers: \"1-2|3|4-5|6-9\"\n#| eval: false\nggplot(busia) + \n  geom_point(aes(x = itn_coverage, y = pfpr, color = residence)) + \n  geom_smooth(aes(x = itn_coverage, y = pfpr)) + \n  scale_x_continuous(labels = percent_format()) + \n  scale_y_continuous(labels = percent_format()) +\n  labs(title = 'The relationship between ITN use and PfPr',\n       x = 'ITN Coverage (%)',\n       y = 'PfPr (%)') + \n  theme_bw()\n```\n\n. . .\n\n\n```{r}\n#| echo: false\n#| fig-height: 4\n#| fig-align: \"center\"\nggplot(busia) + \n  geom_point(aes(x = itn_coverage, y = pfpr, color = residence)) + \n  geom_smooth(aes(x = itn_coverage, y = pfpr)) + \n  scale_x_continuous(labels = percent_format()) + \n  scale_y_continuous(labels = percent_format()) +\n  labs(title = 'The relationship between ITN use and PfPr',\n       x = 'ITN Coverage (%)',\n       y = 'PfPr (%)') + \n  theme_bw()\n```\n\n---\n\nPractial: Implement residence-specific trends, \n<br>\nhint: `color = residence`\n\n. . .\n\n```{r}\n#| echo: false\n#| fig-height: 4\n#| fig-align: \"center\"\nggplot(busia) + \n  geom_point(aes(x = itn_coverage, y = pfpr, color = residence)) + \n  geom_smooth(aes(x = itn_coverage, y = pfpr, color = residence)) + \n  scale_x_continuous(labels = percent_format()) + \n  scale_y_continuous(labels = percent_format()) +\n  labs(title = 'The relationship between ITN use and PfPr',\n       x = 'ITN Coverage (%)',\n       y = 'PfPr (%)') + \n  theme_bw()\n```\n\n---\n\n## Adding functionality (panels)\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n[1 2]{style=\"opacity:0.25\"} 3 [4 5 6]{style=\"opacity:0.25\"}\n:::\n:::\n\n```{r}\n#| code-line-numbers: \"1-5|6|7-10\"\n#| eval: false\nggplot(mdata |> filter(county %in% c('Turkana', 'Busia', 'Nairobi'))) + \n  geom_point(aes(x = itn_coverage, y = pfpr, color = residence)) + \n  geom_smooth(aes(x = itn_coverage, y = pfpr, color = residence)) + \n  scale_x_continuous(labels = percent_format()) + \n  scale_y_continuous(labels = percent_format()) +\n  facet_wrap(~county, scale = 'free') + \n  labs(title = 'The relationship between ITN use and PfPr',\n       x = 'ITN Coverage (%)',\n       y = 'PfPr (%)') + \n  theme_bw()\n```\n\n. . .\n\n\n```{r}\n#| echo: false\n#| fig-height: 4\n#| fig-align: \"center\"\nggplot(mdata |> filter(county %in% c('Kajiado', 'Busia', 'Nairobi'))) + \n  geom_point(aes(x = itn_coverage, y = pfpr, color = residence)) + \n  geom_smooth(aes(x = itn_coverage, y = pfpr, color = residence)) + \n  scale_x_continuous(labels = percent_format()) + \n  scale_y_continuous(labels = percent_format()) +\n  facet_wrap(~county, scale = 'free') + \n  labs(title = 'The relationship between ITN use and PfPr',\n       x = 'ITN Coverage (%)',\n       y = 'PfPr (%)') + \n  theme_bw()\n```\n\n---\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n[1 2]{style=\"opacity:0.25\"} 3 [4 5 6]{style=\"opacity:0.25\"}\n:::\n:::\n\n```{r}\n#| echo: false\n#| fig-height: 10\n#| fig-width: 14\n#| fig-align: \"center\"\nggplot(mdata) + \n  geom_point(aes(x = itn_coverage, y = pfpr, color = residence)) + \n  geom_smooth(aes(x = itn_coverage, y = pfpr, color = residence)) + \n  scale_x_continuous(labels = percent_format()) + \n  scale_y_continuous(labels = percent_format()) +\n  facet_wrap(~county, scale = 'free') + \n  labs(title = 'The relationship between ITN use and PfPr',\n       x = 'ITN Coverage (%)',\n       y = 'PfPr (%)') + \n  theme_bw()\n```\n\n\n---\n\n## Bar charts and column charts\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n[1 2 3]{style=\"opacity:0.25\"} 4 [5 6]{style=\"opacity:0.25\"}\n:::\n:::\n\n```{r}\n#| code-line-numbers: \"1-4\"\n#| eval: false\nrain_data <- read.csv('data/interim/rainfall_data.csv')\n\nhead(rain_data)\n```\n\n. . .\n\nHow do we filter to end up with: year: 2023,  the counties: [Mombasa, Turkana, Nyeri], residence: urban centers only ?\n\nHow do we order the dataset by county, year and month ?\n\n---\n\n```{r}\n#| code-line-numbers: \"1-14\"\n#| eval: false\nrain_data <- read.csv('data/interim/rainfall_data.csv')\n\nr1_data <- rain_data |>\n  \n  # adding andf modifying existing columns\n  mutate(month = factor(month, levels = c(\"Jan\", \"Feb\", \"Mar\", \"Apr\",\n                                              \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \n                                              \"Oct\", \"Nov\", \"Dec\"))) |>\n  \n  # filtering\n  filter(county %in% c('Mombasa', 'Turkana', 'Nyeri') & year == 2023 & residence == 'urban') |>\n  \n  # ordering\n  arrange(desc(year), month, county)\n```\n\n. . .\n\n```{r}\n#| echo: false\n#| fig-align: \"center\"\nrain_data <- read.csv('data/interim/rainfall_data.csv')\n\nr1_data <- rain_data |>\n  \n  # adding andf modifying existing columns\n  mutate(month = factor(month, levels = c(\"Jan\", \"Feb\", \"Mar\", \"Apr\",\n                                              \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \n                                              \"Oct\", \"Nov\", \"Dec\"))) |>\n  \n  # filtering\n  filter(county %in% c('Mombasa', 'Turkana', 'Nyeri') & year == 2023 & residence == 'urban') |>\n  \n  # ordering\n  arrange(desc(year), month, county)\n\n```\n\n---\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n[1 2 3]{style=\"opacity:0.25\"} 4 [5 6]{style=\"opacity:0.25\"}\n:::\n:::\n\n```{r}\n#| code-line-numbers: \"1-5|6|7-10\"\n#| eval: false\nggplot(data = r1_data |> filter(county == 'Mombasa')) + \n  geom_col(aes(x = month, y = rainfall)) + \n  labs(title = 'Monthly rainfall (in mm)',\n       x = 'Month',\n       y = 'Rainfall values (in mm)') + \n  theme_bw()\n```\n\n. . .\n\n\n```{r}\n#| echo: false\n#| fig-height: 4\n#| fig-align: \"center\"\nggplot(data = r1_data |> filter(county == 'Mombasa')) + \n  geom_col(aes(x = month, y = rainfall)) + \n  labs(title = 'Monthly rainfall (in mm)',\n       x = 'Month',\n       y = 'Rainfall values (in mm)') + \n  theme_bw()\n```\n\n---\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n[1 2 3]{style=\"opacity:0.25\"} 4 [5 6]{style=\"opacity:0.25\"}\n:::\n:::\n\nPlotting the rest ...\n\n. . .\n\n```{r}\n#| code-line-numbers: \"1-5|6|7-10\"\n#| eval: false\nggplot(data = r1_data) + \n  geom_col(aes(x = month, y = rainfall, fill = county)) + \n  labs(title = 'Monthly rainfall (in mm)',\n       x = 'Month',\n       y = 'Rainfall values (in mm)') + \n  theme_bw() + \n  facet_wrap(~county, nrow = 2)\n```\n\n. . .\n\n\n```{r}\n#| echo: false\n#| fig-height: 4\n#| fig-align: \"center\"\nggplot(data = r1_data) + \n  geom_col(aes(x = month, y = rainfall, fill = county)) + \n  labs(title = 'Monthly rainfall (in mm)',\n       x = 'Month',\n       y = 'Rainfall values (in mm)') + \n  theme_bw() + \n  facet_wrap(~county, nrow = 2)\n```\n\n---\n\n## Maps\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n[1 2 3 4]{style=\"opacity:0.25\"} 5 [6]{style=\"opacity:0.25\"}\n:::\n:::\n\nFor plotting maps, we will need a shapefile - essentially a data object holding the geometry of locations, to be plotted on maps (boundaries, lines, etc)\n\n```{r}\n#| code-line-numbers: \"1-4\"\n#| eval: false\nshp <- st_read('data/interim/shp/kenyan_counties.shp')\nhead(shp)\n```\n\n. . .\n\n```{r}\n#| echo: false\n#| fig-height: 4\n#| fig-align: \"center\"\nshp <- st_read('data/interim/shp/kenyan_counties.shp')\nhead(shp)\n```\n\n\n---\n\n## Plotting simple maps - without data\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n[1 2 3 4]{style=\"opacity:0.25\"} 5 [6]{style=\"opacity:0.25\"}\n:::\n:::\n\nThe geometric object to use is the `geom_sf`, and a neat theme, preferrably `theme_void`\n\n```{r}\n#| code-line-numbers: \"1-4\"\n#| eval: false\nggplot(shp) + \n  geom_sf(aes(geometry = geometry, fill = name_1), \n          show.legend = F) + \n  theme_void()\n```\n\n. . .\n\n```{r}\n#| echo: false\n#| fig-height: 4\n#| fig-align: \"center\"\nggplot(shp) + \n  geom_sf(aes(geometry = geometry, fill = name_1), \n          show.legend = F) + \n  theme_void()\n```\n\n\n---\n\n## Plotting simple maps - with PfPr data\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n[1 2 3 4]{style=\"opacity:0.25\"} 5 [6]{style=\"opacity:0.25\"}\n:::\n:::\n\nWe need to merge our datasets together (shapefile and data), to have a single shapefile with the data column of interest, the `EIR` (transmission intensity).\n\n\n```{r}\n#| code-line-numbers: \"1-7\"\n#| eval: false\neir_data <- read.csv('data/interim/eir_data.csv')\nshp_data <- merge(shp, eir_data, by = 'name_1')\n\nggplot(shp_data) + \n  geom_sf(aes(geometry = geometry, fill = eir)) + \n  theme_void()\n```\n\n. . .\n\n```{r}\n#| echo: false\n#| fig-height: 4\n#| fig-width: 4\n#| fig-align: \"center\"\neir_data <- read.csv('data/interim/eir_data.csv')\nshp_data <- merge(shp, eir_data, by = 'name_1')\n\nggplot(shp_data) + \n  geom_sf(aes(geometry = geometry, fill = eir)) + \n  theme_void()\n```\n\n\n---\n\n## ggplot2 resources\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n[1 2 3 4 5]{style=\"opacity:0.25\"} 6\n:::\n:::\n\nfrom [R for Data Science](https://r4ds.had.co.nz/data-visualisation.html)\n\n<br>\n\n[Data Visualization: a practical introduction](https://socviz.co/index.html#preface)\n\n<br>\n\ncreating [custom themes](https://themockup.blog/posts/2020-12-26-creating-and-using-custom-ggplot2-themes/)\n\n<br>\n\nthe [ggplot2 book](https://ggplot2-book.org/)\n\n<br>\n\nthe [R graph gallery](https://r-graph-gallery.com/index.html)\n\n---\n\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n[1 2 3 4 5]{style=\"opacity:0.25\"} 6\n:::\n:::\n\nExamples of plots from R-Gallery:\n\n```{=html}\n<iframe width=\"1000\" height=\"600\" src=\"https://r-graph-gallery.com/\" title=\"R graph Gallery example\"></iframe>\n```\n\n---\n\n## Putting it all together\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n[1 2 3 4 5]{style=\"opacity:0.25\"} 6\n:::\n:::\n\n<br>\n\nwith what we've done so far, in your `.R` file:\n\n::: {.incremental}\n- Basics and fundamentals of R programming\n- Visualization of epi data\n:::\n\n. . .\n\n::: {style=\"text-align: center\"}\n**and that file would make it extremely easy for you or someone else to reproduce this analysis.**\n:::\n","srcMarkdownNoYaml":"\n\n# Data visualization\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n1 [2 3 4 5 6]{style=\"opacity:0.25\"}\n:::\n:::\n\n## ggplot2\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n1 [2 3 4 5 6]{style=\"opacity:0.25\"}\n:::\n:::\n\n<br>\n\n`ggplot2` is the data visualization package that is loaded with the `tidyverse` suite and can alternatively be loaded independently.\n\n<br>\n\nthe [g]{style=\"color:#cc0000\"}rammar of [g]{style=\"color:#cc0000\"}raphics maps data to the aesthetic attributes of geometric points\n\n. . .\n\n<br>\n\nencoding data into visual asttributes (e.g., length, color, position, size) is how we signify changes and comparisons\n\n---\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n1 [2 3 4 5 6]{style=\"opacity:0.25\"}\n:::\n:::\n\nThe syntax :\n\n<br>\n\nWe use `+` to join the components of a ggplot object instead of the pipe `|>`\n\n<br>\n\n```{r}\n#| echo: false\nlibrary(tidyverse)\nlibrary(scales)\nlibrary(sf)\n```\n\n```{r}\n#| code-line-numbers: \"1-2|4-6|8-9|11-12\"\n#| eval: false\n\n# we need to pass our data\nggplot(data = your_data) +    \n  \n  # we need to specify the geometry object: line, point, histogram, bar, density, area etc.\n  # we also pass aesthetics including x/y variable, color, fill, size, shape, opacity etc.\n  geom_*.*(mapping = aes()) + \n                \n  # the labels: title, x-label, y-label, subtitles, caption              \n  labs(our_labels) +  \n  \n  # our themes including fonts, and other theming objects\n  theme_*.*()                 \n```\n\n---\n\n## Line chart\n\nFor the data visualization exercise, we will utilize the datasets from the previous sessions.\n\n```{r}\n#| code-line-numbers: \"1|2|3-4\"\n#| eval: false\nmdata <- read.csv('data/interim/pfpr_intvn.csv')\nbusia <- mdata |> filter(county == 'Busia')\nggplot(busia) + \n  geom_line(aes(x = year, y = pfpr, col = residence))\n```\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n[1]{style=\"opacity:0.25\"} 2 [3 4 5 6]{style=\"opacity:0.25\"}\n:::\n:::\n\n. . .\n\n```{r}\n#| echo: false\n#| fig-height: 4\n#| fig-align: \"center\"\nmdata <- read.csv('data/interim/pfpr_intvn.csv')\nbusia <- mdata |> filter(county == 'Busia')\nggplot(busia) + \n  geom_line(aes(x = year, y = pfpr, col = residence))\n```\n\n---\n\n## Adding functional elements (labels)\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n[1]{style=\"opacity:0.25\"} 2 [3 4 5 6]{style=\"opacity:0.25\"}\n:::\n:::\n\n\n```{r}\n#| code-line-numbers: \"1-2|3-5\"\n#| eval: false\nggplot(busia) + \n  geom_line(aes(x = year, y = pfpr, col = residence)) + \n  labs(title = 'Plasmodium Falciparum Prevalence in Busia County',\n       y = 'Year',\n       x = 'PfPr (%)')\n```\n\n. . .\n\n\n```{r}\n#| echo: false\n#| fig-height: 4\n#| fig-align: \"center\"\nggplot(busia) + \n  geom_line(aes(x = year, y = pfpr, col = residence)) + \n  labs(title = 'Plasmodium Falciparum Prevalence in Busia County',\n       x = 'Year',\n       y = 'PfPr (%)')\n```\n\n---\n\n## Adding functional elements (themes)\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n[1]{style=\"opacity:0.25\"} 2 [3 4 5 6]{style=\"opacity:0.25\"}\n:::\n:::\n\n```{r}\n#| code-line-numbers: \"1-2|3-5|6|7\"\n#| eval: false\nggplot(busia) + \n  geom_line(aes(x = year, y = pfpr, col = residence)) + \n  labs(title = 'Plasmodium Falciparum Prevalence in Busia County',\n       y = 'Year',\n       x = 'PfPr (%)') + \n  theme_bw()\n# other themes: theme_bw(), theme_light(), theme_minimal(), theme_gray(), theme_dark(), theme_classic()\n```\n\n. . .\n\n\n```{r}\n#| echo: false\n#| fig-height: 4\n#| fig-align: \"center\"\nggplot(busia) + \n  geom_line(aes(x = year, y = pfpr, col = residence)) + \n  labs(title = 'Plasmodium Falciparum Prevalence in Busia County',\n       y = 'Year',\n       x = 'PfPr (%)') + \n  theme_bw()\n# other themes: theme_bw(), theme_light(), theme_minimal(), theme_gray(), theme_dark(), theme_classic()\n```\n\n---\n\n## Scatter plots\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n[1 2]{style=\"opacity:0.25\"} 3 [4 5 6]{style=\"opacity:0.25\"}\n:::\n:::\n\n\n```{r}\n#| code-line-numbers: \"1-2|3-6\"\n#| eval: false\nggplot(busia) + \n  geom_point(aes(x = itn_coverage, y = pfpr)) + \n  labs(title = 'The relationship between ITN use and PfPr',\n       x = 'ITN Coverage (%)',\n       y = 'PfPr (%)') + \n  theme_bw()\n```\n\n. . .\n\n\n```{r}\n#| echo: false\n#| fig-height: 4\n#| fig-align: \"center\"\nggplot(busia) + \n  geom_point(aes(x = itn_coverage, y = pfpr)) + \n  labs(title = 'The relationship between ITN use and PfPr',\n       x = 'ITN Coverage (%)',\n       y = 'PfPr (%)') + \n  theme_bw()\n```\n\n---\n\n## Adding aesthetic elements (color, shape, size, alpha)\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n[1 2]{style=\"opacity:0.25\"} 3 [4 5 6]{style=\"opacity:0.25\"}\n:::\n:::\n\n```{r}\n#| code-line-numbers: \"1-2|3|4-7|8-9\"\n#| eval: false\nggplot(busia) + \n  geom_point(aes(x = itn_coverage, y = pfpr),\n             color = 'red', size = 2, shape = 15, alpha = 1) + \n  labs(title = 'The relationship between ITN use and PfPr',\n       x = 'ITN Coverage (%)',\n       y = 'PfPr (%)') + \n  theme_bw()\n# try other colors, sizes, and shapes: 15, 16, 17, i.e. 1-20\n# alpha values are for opacity of points: ranging from 0-1\n```\n\n. . .\n\n\n```{r}\n#| echo: false\n#| fig-height: 4\n#| fig-align: \"center\"\nggplot(busia) + \n  geom_point(aes(x = itn_coverage, y = pfpr),\n             color = 'red', size = 2, shape = 15, alpha = 1) + \n  labs(title = 'The relationship between ITN use and PfPr',\n       x = 'ITN Coverage (%)',\n       y = 'PfPr (%)') + \n  theme_bw()\n# try other colors, sizes, and shapes: 15, 16, 17, i.e. 1-20\n# alpha values are for opacity of points: ranging from 0-1\n```\n\n---\n\n## Adding aesthetic elements (color)\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n[1 2]{style=\"opacity:0.25\"} 3 [4 5 6]{style=\"opacity:0.25\"}\n:::\n:::\n\n```{r}\n#| code-line-numbers: \"1-2|3-6\"\n#| eval: false\nggplot(busia) + \n  geom_point(aes(x = itn_coverage, y = pfpr, color = residence)) + \n  labs(title = 'The relationship between ITN use and PfPr',\n       x = 'ITN Coverage (%)',\n       y = 'PfPr (%)') + \n  theme_bw()\n```\n\n. . .\n\n\n```{r}\n#| echo: false\n#| fig-height: 4\n#| fig-align: \"center\"\nggplot(busia) + \n  geom_point(aes(x = itn_coverage, y = pfpr, color = residence)) + \n  labs(title = 'The relationship between ITN use and PfPr',\n       x = 'ITN Coverage (%)',\n       y = 'PfPr (%)') + \n  theme_bw()\n```\n\n---\n\n## Adding functional elements (scale)\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n[1 2]{style=\"opacity:0.25\"} 3 [4 5 6]{style=\"opacity:0.25\"}\n:::\n:::\n\n```{r}\n#| code-line-numbers: \"1-2|3-4|5-8\"\n#| eval: false\nggplot(busia) + \n  geom_point(aes(x = itn_coverage, y = pfpr, color = residence)) + \n  scale_x_continuous(labels = percent_format()) + \n  scale_y_continuous(labels = percent_format()) +\n  labs(title = 'The relationship between ITN use and PfPr',\n       x = 'ITN Coverage (%)',\n       y = 'PfPr (%)') + \n  theme_bw()\n```\n\n. . .\n\n\n```{r}\n#| echo: false\n#| fig-height: 4\n#| fig-align: \"center\"\nggplot(busia) + \n  geom_point(aes(x = itn_coverage, y = pfpr, color = residence)) + \n  scale_x_continuous(labels = percent_format()) + \n  scale_y_continuous(labels = percent_format()) +\n  labs(title = 'The relationship between ITN use and PfPr',\n       x = 'ITN Coverage (%)',\n       y = 'PfPr (%)') + \n  theme_bw()\n```\n\n---\n\n\n## Adding functional elements (trends)\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n[1 2]{style=\"opacity:0.25\"} 3 [4 5 6]{style=\"opacity:0.25\"}\n:::\n:::\n\n```{r}\n#| code-line-numbers: \"1-2|3|4-5|6-9\"\n#| eval: false\nggplot(busia) + \n  geom_point(aes(x = itn_coverage, y = pfpr, color = residence)) + \n  geom_smooth(aes(x = itn_coverage, y = pfpr)) + \n  scale_x_continuous(labels = percent_format()) + \n  scale_y_continuous(labels = percent_format()) +\n  labs(title = 'The relationship between ITN use and PfPr',\n       x = 'ITN Coverage (%)',\n       y = 'PfPr (%)') + \n  theme_bw()\n```\n\n. . .\n\n\n```{r}\n#| echo: false\n#| fig-height: 4\n#| fig-align: \"center\"\nggplot(busia) + \n  geom_point(aes(x = itn_coverage, y = pfpr, color = residence)) + \n  geom_smooth(aes(x = itn_coverage, y = pfpr)) + \n  scale_x_continuous(labels = percent_format()) + \n  scale_y_continuous(labels = percent_format()) +\n  labs(title = 'The relationship between ITN use and PfPr',\n       x = 'ITN Coverage (%)',\n       y = 'PfPr (%)') + \n  theme_bw()\n```\n\n---\n\nPractial: Implement residence-specific trends, \n<br>\nhint: `color = residence`\n\n. . .\n\n```{r}\n#| echo: false\n#| fig-height: 4\n#| fig-align: \"center\"\nggplot(busia) + \n  geom_point(aes(x = itn_coverage, y = pfpr, color = residence)) + \n  geom_smooth(aes(x = itn_coverage, y = pfpr, color = residence)) + \n  scale_x_continuous(labels = percent_format()) + \n  scale_y_continuous(labels = percent_format()) +\n  labs(title = 'The relationship between ITN use and PfPr',\n       x = 'ITN Coverage (%)',\n       y = 'PfPr (%)') + \n  theme_bw()\n```\n\n---\n\n## Adding functionality (panels)\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n[1 2]{style=\"opacity:0.25\"} 3 [4 5 6]{style=\"opacity:0.25\"}\n:::\n:::\n\n```{r}\n#| code-line-numbers: \"1-5|6|7-10\"\n#| eval: false\nggplot(mdata |> filter(county %in% c('Turkana', 'Busia', 'Nairobi'))) + \n  geom_point(aes(x = itn_coverage, y = pfpr, color = residence)) + \n  geom_smooth(aes(x = itn_coverage, y = pfpr, color = residence)) + \n  scale_x_continuous(labels = percent_format()) + \n  scale_y_continuous(labels = percent_format()) +\n  facet_wrap(~county, scale = 'free') + \n  labs(title = 'The relationship between ITN use and PfPr',\n       x = 'ITN Coverage (%)',\n       y = 'PfPr (%)') + \n  theme_bw()\n```\n\n. . .\n\n\n```{r}\n#| echo: false\n#| fig-height: 4\n#| fig-align: \"center\"\nggplot(mdata |> filter(county %in% c('Kajiado', 'Busia', 'Nairobi'))) + \n  geom_point(aes(x = itn_coverage, y = pfpr, color = residence)) + \n  geom_smooth(aes(x = itn_coverage, y = pfpr, color = residence)) + \n  scale_x_continuous(labels = percent_format()) + \n  scale_y_continuous(labels = percent_format()) +\n  facet_wrap(~county, scale = 'free') + \n  labs(title = 'The relationship between ITN use and PfPr',\n       x = 'ITN Coverage (%)',\n       y = 'PfPr (%)') + \n  theme_bw()\n```\n\n---\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n[1 2]{style=\"opacity:0.25\"} 3 [4 5 6]{style=\"opacity:0.25\"}\n:::\n:::\n\n```{r}\n#| echo: false\n#| fig-height: 10\n#| fig-width: 14\n#| fig-align: \"center\"\nggplot(mdata) + \n  geom_point(aes(x = itn_coverage, y = pfpr, color = residence)) + \n  geom_smooth(aes(x = itn_coverage, y = pfpr, color = residence)) + \n  scale_x_continuous(labels = percent_format()) + \n  scale_y_continuous(labels = percent_format()) +\n  facet_wrap(~county, scale = 'free') + \n  labs(title = 'The relationship between ITN use and PfPr',\n       x = 'ITN Coverage (%)',\n       y = 'PfPr (%)') + \n  theme_bw()\n```\n\n\n---\n\n## Bar charts and column charts\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n[1 2 3]{style=\"opacity:0.25\"} 4 [5 6]{style=\"opacity:0.25\"}\n:::\n:::\n\n```{r}\n#| code-line-numbers: \"1-4\"\n#| eval: false\nrain_data <- read.csv('data/interim/rainfall_data.csv')\n\nhead(rain_data)\n```\n\n. . .\n\nHow do we filter to end up with: year: 2023,  the counties: [Mombasa, Turkana, Nyeri], residence: urban centers only ?\n\nHow do we order the dataset by county, year and month ?\n\n---\n\n```{r}\n#| code-line-numbers: \"1-14\"\n#| eval: false\nrain_data <- read.csv('data/interim/rainfall_data.csv')\n\nr1_data <- rain_data |>\n  \n  # adding andf modifying existing columns\n  mutate(month = factor(month, levels = c(\"Jan\", \"Feb\", \"Mar\", \"Apr\",\n                                              \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \n                                              \"Oct\", \"Nov\", \"Dec\"))) |>\n  \n  # filtering\n  filter(county %in% c('Mombasa', 'Turkana', 'Nyeri') & year == 2023 & residence == 'urban') |>\n  \n  # ordering\n  arrange(desc(year), month, county)\n```\n\n. . .\n\n```{r}\n#| echo: false\n#| fig-align: \"center\"\nrain_data <- read.csv('data/interim/rainfall_data.csv')\n\nr1_data <- rain_data |>\n  \n  # adding andf modifying existing columns\n  mutate(month = factor(month, levels = c(\"Jan\", \"Feb\", \"Mar\", \"Apr\",\n                                              \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \n                                              \"Oct\", \"Nov\", \"Dec\"))) |>\n  \n  # filtering\n  filter(county %in% c('Mombasa', 'Turkana', 'Nyeri') & year == 2023 & residence == 'urban') |>\n  \n  # ordering\n  arrange(desc(year), month, county)\n\n```\n\n---\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n[1 2 3]{style=\"opacity:0.25\"} 4 [5 6]{style=\"opacity:0.25\"}\n:::\n:::\n\n```{r}\n#| code-line-numbers: \"1-5|6|7-10\"\n#| eval: false\nggplot(data = r1_data |> filter(county == 'Mombasa')) + \n  geom_col(aes(x = month, y = rainfall)) + \n  labs(title = 'Monthly rainfall (in mm)',\n       x = 'Month',\n       y = 'Rainfall values (in mm)') + \n  theme_bw()\n```\n\n. . .\n\n\n```{r}\n#| echo: false\n#| fig-height: 4\n#| fig-align: \"center\"\nggplot(data = r1_data |> filter(county == 'Mombasa')) + \n  geom_col(aes(x = month, y = rainfall)) + \n  labs(title = 'Monthly rainfall (in mm)',\n       x = 'Month',\n       y = 'Rainfall values (in mm)') + \n  theme_bw()\n```\n\n---\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n[1 2 3]{style=\"opacity:0.25\"} 4 [5 6]{style=\"opacity:0.25\"}\n:::\n:::\n\nPlotting the rest ...\n\n. . .\n\n```{r}\n#| code-line-numbers: \"1-5|6|7-10\"\n#| eval: false\nggplot(data = r1_data) + \n  geom_col(aes(x = month, y = rainfall, fill = county)) + \n  labs(title = 'Monthly rainfall (in mm)',\n       x = 'Month',\n       y = 'Rainfall values (in mm)') + \n  theme_bw() + \n  facet_wrap(~county, nrow = 2)\n```\n\n. . .\n\n\n```{r}\n#| echo: false\n#| fig-height: 4\n#| fig-align: \"center\"\nggplot(data = r1_data) + \n  geom_col(aes(x = month, y = rainfall, fill = county)) + \n  labs(title = 'Monthly rainfall (in mm)',\n       x = 'Month',\n       y = 'Rainfall values (in mm)') + \n  theme_bw() + \n  facet_wrap(~county, nrow = 2)\n```\n\n---\n\n## Maps\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n[1 2 3 4]{style=\"opacity:0.25\"} 5 [6]{style=\"opacity:0.25\"}\n:::\n:::\n\nFor plotting maps, we will need a shapefile - essentially a data object holding the geometry of locations, to be plotted on maps (boundaries, lines, etc)\n\n```{r}\n#| code-line-numbers: \"1-4\"\n#| eval: false\nshp <- st_read('data/interim/shp/kenyan_counties.shp')\nhead(shp)\n```\n\n. . .\n\n```{r}\n#| echo: false\n#| fig-height: 4\n#| fig-align: \"center\"\nshp <- st_read('data/interim/shp/kenyan_counties.shp')\nhead(shp)\n```\n\n\n---\n\n## Plotting simple maps - without data\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n[1 2 3 4]{style=\"opacity:0.25\"} 5 [6]{style=\"opacity:0.25\"}\n:::\n:::\n\nThe geometric object to use is the `geom_sf`, and a neat theme, preferrably `theme_void`\n\n```{r}\n#| code-line-numbers: \"1-4\"\n#| eval: false\nggplot(shp) + \n  geom_sf(aes(geometry = geometry, fill = name_1), \n          show.legend = F) + \n  theme_void()\n```\n\n. . .\n\n```{r}\n#| echo: false\n#| fig-height: 4\n#| fig-align: \"center\"\nggplot(shp) + \n  geom_sf(aes(geometry = geometry, fill = name_1), \n          show.legend = F) + \n  theme_void()\n```\n\n\n---\n\n## Plotting simple maps - with PfPr data\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n[1 2 3 4]{style=\"opacity:0.25\"} 5 [6]{style=\"opacity:0.25\"}\n:::\n:::\n\nWe need to merge our datasets together (shapefile and data), to have a single shapefile with the data column of interest, the `EIR` (transmission intensity).\n\n\n```{r}\n#| code-line-numbers: \"1-7\"\n#| eval: false\neir_data <- read.csv('data/interim/eir_data.csv')\nshp_data <- merge(shp, eir_data, by = 'name_1')\n\nggplot(shp_data) + \n  geom_sf(aes(geometry = geometry, fill = eir)) + \n  theme_void()\n```\n\n. . .\n\n```{r}\n#| echo: false\n#| fig-height: 4\n#| fig-width: 4\n#| fig-align: \"center\"\neir_data <- read.csv('data/interim/eir_data.csv')\nshp_data <- merge(shp, eir_data, by = 'name_1')\n\nggplot(shp_data) + \n  geom_sf(aes(geometry = geometry, fill = eir)) + \n  theme_void()\n```\n\n\n---\n\n## ggplot2 resources\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n[1 2 3 4 5]{style=\"opacity:0.25\"} 6\n:::\n:::\n\nfrom [R for Data Science](https://r4ds.had.co.nz/data-visualisation.html)\n\n<br>\n\n[Data Visualization: a practical introduction](https://socviz.co/index.html#preface)\n\n<br>\n\ncreating [custom themes](https://themockup.blog/posts/2020-12-26-creating-and-using-custom-ggplot2-themes/)\n\n<br>\n\nthe [ggplot2 book](https://ggplot2-book.org/)\n\n<br>\n\nthe [R graph gallery](https://r-graph-gallery.com/index.html)\n\n---\n\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n[1 2 3 4 5]{style=\"opacity:0.25\"} 6\n:::\n:::\n\nExamples of plots from R-Gallery:\n\n```{=html}\n<iframe width=\"1000\" height=\"600\" src=\"https://r-graph-gallery.com/\" title=\"R graph Gallery example\"></iframe>\n```\n\n---\n\n## Putting it all together\n\n::: {.absolute top=\"0\" left=\"100%\"}\n::: {.sectionhead}\n[1 2 3 4 5]{style=\"opacity:0.25\"} 6\n:::\n:::\n\n<br>\n\nwith what we've done so far, in your `.R` file:\n\n::: {.incremental}\n- Basics and fundamentals of R programming\n- Visualization of epi data\n:::\n\n. . .\n\n::: {style=\"text-align: center\"}\n**and that file would make it extremely easy for you or someone else to reproduce this analysis.**\n:::\n"},"formats":{"revealjs":{"identifier":{"display-name":"RevealJS","target-format":"revealjs","base-format":"revealjs"},"execute":{"fig-width":10,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","html-math-method":{"method":"mathjax","url":"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS_HTML-full"},"slide-level":2,"to":"revealjs","from":"markdown+emoji","output-file":"NEAIR.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":false,"quarto-version":"1.5.57","auto-stretch":true,"title":"Data visualiaation with {ggplot2}","author":"Stanley Sayianka<br>-<br>Aug 19, 2025","footer":"[Credits: github.com/meghall06/neair](https://github.com/meghall06/neair)&nbsp;&nbsp;&nbsp;","theme":["moon","custom.scss"],"previewLinks":"auto","chalkboard":{"boardmarker-width":5}}}},"projectFormats":["html"]}